// <auto-generated />
using System;
using BookLibraryApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookLibraryApi.Migrations
{
    [DbContext(typeof(BookLibraryDbContext))]
    partial class BookLibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookLibraryApi.Models.Author", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Harper Lee"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "George Orwell"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "J.K. Rowling"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "J.R.R. Tolkien"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "F. Scott Fitzgerald"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "Jane Austen"
                        },
                        new
                        {
                            Id = 7L,
                            Name = "Anne Frank"
                        },
                        new
                        {
                            Id = 8L,
                            Name = "Markus Zusak"
                        },
                        new
                        {
                            Id = 9L,
                            Name = "Louisa May Alcott"
                        });
                });

            modelBuilder.Entity("BookLibraryApi.Models.Book", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuthorId");

                    b.Property<long?>("BookCategoryId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookCategoryId");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AuthorId = 1L,
                            BookCategoryId = 1L,
                            Name = "To Kill a Mockingbird"
                        },
                        new
                        {
                            Id = 2L,
                            AuthorId = 2L,
                            BookCategoryId = 2L,
                            Name = "1984"
                        },
                        new
                        {
                            Id = 3L,
                            AuthorId = 3L,
                            BookCategoryId = 3L,
                            Name = "Harry Potter and the Philosopher’s Stone"
                        },
                        new
                        {
                            Id = 4L,
                            AuthorId = 4L,
                            BookCategoryId = 3L,
                            Name = "The Lord of the Rings"
                        },
                        new
                        {
                            Id = 5L,
                            AuthorId = 5L,
                            BookCategoryId = 4L,
                            Name = "The Great Gatsby"
                        },
                        new
                        {
                            Id = 6L,
                            AuthorId = 6L,
                            BookCategoryId = 5L,
                            Name = "Pride and Prejudice"
                        },
                        new
                        {
                            Id = 7L,
                            AuthorId = 7L,
                            BookCategoryId = 5L,
                            Name = "The Diary Of A Young Girl"
                        },
                        new
                        {
                            Id = 8L,
                            AuthorId = 8L,
                            BookCategoryId = 6L,
                            Name = "The Book Thief"
                        },
                        new
                        {
                            Id = 9L,
                            AuthorId = 4L,
                            BookCategoryId = 3L,
                            Name = "The Hobbit"
                        },
                        new
                        {
                            Id = 10L,
                            AuthorId = 9L,
                            BookCategoryId = 7L,
                            Name = "Little Women"
                        });
                });

            modelBuilder.Entity("BookLibraryApi.Models.BookCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("BookCategory");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Fantasy Fiction"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Fiction"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "Historical Fiction"
                        },
                        new
                        {
                            Id = 7L,
                            Name = "Comedy"
                        });
                });

            modelBuilder.Entity("BookLibraryApi.Models.Book", b =>
                {
                    b.HasOne("BookLibraryApi.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("BookLibraryApi.Models.BookCategory", "BookCategory")
                        .WithMany()
                        .HasForeignKey("BookCategoryId");
                });
#pragma warning restore 612, 618
        }
    }
}
